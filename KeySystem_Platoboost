local service = 3916;--Set your Platoboost Id 
local secret = "13689cb1-e616-48c2-9b24-89a6fd182f44"; --Set Your Platoboost Api key
local useNonce = true; 
local onMessage = function(message)  game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", { Text = message; }) end;

repeat task.wait(1) until game:IsLoaded() or game.Players.LocalPlayer;

local requestSending = false;
local fSetClipboard, fRequest, fStringChar, fToString, fStringSub, fOsTime, fMathRandom, fMathFloor, fGetHwid = setclipboard or toclipboard, request or http_request, string.char, tostring, string.sub, os.time, math.random, math.floor, gethwid or function() return game:GetService("Players").LocalPlayer.UserId end
local cachedLink, cachedTime = "", 0;
local HttpService = game:GetService("HttpService")

function lEncode(data)
    return HttpService:JSONEncode(data)
end
function lDecode(data)
    return HttpService:JSONDecode(data)
end
local function lDigest(input)
    local inputStr = tostring(input)
    
    local hash = {}
    for i = 1, #inputStr do
        table.insert(hash, string.byte(inputStr, i))
    end

    local hashHex = ""
    for _, byte in ipairs(hash) do
        hashHex = hashHex .. string.format("%02x", byte)
    end
    
    return hashHex
end
local host = "https://api.platoboost.com";
local hostResponse = fRequest({
    Url = host .. "/public/connectivity",
    Method = "GET"
});
if hostResponse.StatusCode ~= 200 or hostResponse.StatusCode ~= 429 then
    host = "https://api.platoboost.net";
end

function cacheLink()
    if cachedTime + (10*60) < fOsTime() then
        local response = fRequest({
            Url = host .. "/public/start",
            Method = "POST",
            Body = lEncode({
                service = service,
                identifier = lDigest(fGetHwid())
            }),
            Headers = {
                ["Content-Type"] = "application/json"
            }
        });

        if response.StatusCode == 200 then
            local decoded = lDecode(response.Body);

            if decoded.success == true then
                cachedLink = decoded.data.url;
                cachedTime = fOsTime();
                return true, cachedLink;
            else
                onMessage(decoded.message);
                return false, decoded.message;
            end
        elseif response.StatusCode == 429 then
            local msg = "you are being rate limited, please wait 20 seconds and try again.";
            onMessage(msg);
            return false, msg;
        end

        local msg = "Failed to cache link.";
        onMessage(msg);
        return false, msg;
    else
        return true, cachedLink;
    end
end

cacheLink();

local generateNonce = function()
    local str = ""
    for _ = 1, 16 do
        str = str .. fStringChar(fMathFloor(fMathRandom() * (122 - 97 + 1)) + 97)
    end
    return str
end

for _ = 1, 5 do
    local oNonce = generateNonce();
    task.wait(0.2)
    if generateNonce() == oNonce then
        local msg = "platoboost nonce error.";
        onMessage(msg);
        error(msg);
    end
end

local copyLink = function()
    local success, link = cacheLink();
    
    if success then
        print("SetClipBoard")
        fSetClipboard(link);
    end
end

local redeemKey = function(key)
    local nonce = generateNonce();
    local endpoint = host .. "/public/redeem/" .. fToString(service);

    local body = {
        identifier = lDigest(fGetHwid()),
        key = key
    }

    if useNonce then
        body.nonce = nonce;
    end

    local response = fRequest({
        Url = endpoint,
        Method = "POST",
        Body = lEncode(body),
        Headers = {
            ["Content-Type"] = "application/json"
        }
    });

    if response.StatusCode == 200 then
        local decoded = lDecode(response.Body);
        if decoded.success == true then
            if decoded.data.valid == true then
                if useNonce then
                    if decoded.data.hash == lDigest("true" .. "-" .. nonce .. "-" .. secret) then
                        return true;
                    else
                        onMessage("failed to verify integrity.");
                        return false;
                    end    
                else
                    return true;
                end
            else
                onMessage("key is invalid.");
                return false;
            end
        else
            if fStringSub(decoded.message, 1, 27) == "unique constraint violation" then
                onMessage("you already have an active key, please wait for it to expire before redeeming it.");
                return false;
            else
                onMessage(decoded.message);
                return false;
            end
        end
    elseif response.StatusCode == 429 then
        onMessage("you are being rate limited, please wait 20 seconds and try again.");
        return false;
    else
        onMessage("server returned an invalid status code, please try again later.");
        return false; 
    end
end

local verifyKey = function(key)
    if requestSending == true then
        onMessage("a request is already being sent, please slow down.");
        return false;
    else
        requestSending = true;
    end

    local nonce = generateNonce();
    local endpoint = host .. "/public/whitelist/" .. fToString(service) .. "?identifier=" .. lDigest(fGetHwid()) .. "&key=" .. key;

    if useNonce then
        endpoint = endpoint .. "&nonce=" .. nonce;
    end
    local response = fRequest({
        Url = endpoint,
        Method = "GET",
    });

    requestSending = false;

    if response.StatusCode == 200 then
        local decoded = lDecode(response.Body);
        if decoded.success == true then
            if decoded.data.valid == true then
                if useNonce then
                    return true;
                else
                    return true;
                end
            else
                if fStringSub(key, 1, 4) == "FREE_" then
                    return redeemKey(key);
                else
                    onMessage("key is invalid.");
                    return false;
                end
            end
        else
            onMessage(decoded.message);
            return false;
        end
    elseif response.StatusCode == 429 then
        onMessage("you are being rate limited, please wait 20 seconds and try again.");
        return false;
    else
        onMessage("server returned an invalid status code, please try again later.");
        return false;
    end
end

local getFlag = function(name)
    local nonce = generateNonce();
    local endpoint = host .. "/public/flag/" .. fToString(service) .. "?name=" .. name;

    if useNonce then
        endpoint = endpoint .. "&nonce=" .. nonce;
    end

    local response = fRequest({
        Url = endpoint,
        Method = "GET",
    });

    if response.StatusCode == 200 then
        local decoded = lDecode(response.Body);
        if decoded.success == true then
            if useNonce then
                if decoded.data.hash == lDigest(fToString(decoded.data.value) .. "-" .. nonce .. "-" .. secret) then
                    return decoded.data.value;
                else
                    onMessage("failed to verify integrity.");
                    return nil;
                end
            else
                return decoded.data.value;
            end
        else
            onMessage(decoded.message);
            return nil;
        end
    else
        return nil;
    end
end

task.spawn(function()
    local ScreenGui = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")
    local DropShadowHolder = Instance.new("Frame")
    local DropShadow = Instance.new("ImageLabel")
    local Frame_2 = Instance.new("Frame")
    local Frame_3 = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local TextLabel = Instance.new("TextLabel")
    local TextBox = Instance.new("TextBox")
    local GetKey = Instance.new("TextButton")
    local UICorner_2 = Instance.new("UICorner")
    local Login = Instance.new("TextButton")
    local UICorner_3 = Instance.new("UICorner")
    local Copyright = Instance.new("TextLabel")
    local TextLabel_2 = Instance.new("TextLabel")
    local UICorner_4 = Instance.new("UICorner")
    local CloseButton = Instance.new("TextButton")
    local UICorner_5 = Instance.new("UICorner")

    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    Frame.Parent = ScreenGui
    Frame.AnchorPoint = Vector2.new(0.5, 0.5)
    Frame.BackgroundColor3 = Color3.fromRGB(20, 20, 29)
    Frame.BackgroundTransparency = 0.010
    Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Frame.BorderSizePixel = 0
    Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
    Frame.Size = UDim2.new(0, 442, 0, 252)

    DropShadowHolder.Name = "DropShadowHolder"
    DropShadowHolder.Parent = Frame
    DropShadowHolder.BackgroundTransparency = 1.000
    DropShadowHolder.BorderSizePixel = 0
    DropShadowHolder.Size = UDim2.new(1, 0, 1, 0)
    DropShadowHolder.ZIndex = 0

    DropShadow.Name = "DropShadow"
    DropShadow.Parent = DropShadowHolder
    DropShadow.AnchorPoint = Vector2.new(0.5, 0.5)
    DropShadow.BackgroundTransparency = 1.000
    DropShadow.BorderSizePixel = 0
    DropShadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    DropShadow.Size = UDim2.new(1, 47, 1, 47)
    DropShadow.ZIndex = 0
    DropShadow.Image = "rbxassetid://6014261993"
    DropShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    DropShadow.ImageTransparency = 0.500
    DropShadow.ScaleType = Enum.ScaleType.Slice
    DropShadow.SliceCenter = Rect.new(49, 49, 450, 450)

    Frame_2.Parent = Frame
    Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Frame_2.BackgroundTransparency = 0.700
    Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Frame_2.BorderSizePixel = 0
    Frame_2.Position = UDim2.new(0, 0, 0.699999988, 0)
    Frame_2.Size = UDim2.new(0, 442, 0, 1)

    Frame_3.Parent = Frame
    Frame_3.BackgroundColor3 = Color3.fromRGB(20, 20, 29)
    Frame_3.BackgroundTransparency = 0.500
    Frame_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Frame_3.BorderSizePixel = 0
    Frame_3.Position = UDim2.new(0.0678733066, 0, 0.198412701, 0)
    Frame_3.Size = UDim2.new(0, 384, 0, 47)

    UICorner.CornerRadius = UDim.new(0, 4)
    UICorner.Parent = Frame_3

    TextLabel.Parent = Frame_3
    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.BackgroundTransparency = 1.000
    TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel.BorderSizePixel = 0
    TextLabel.Size = UDim2.new(0, 46, 0, 20)
    TextLabel.Font = Enum.Font.Ubuntu
    TextLabel.Text = "Key"
    TextLabel.TextColor3 = Color3.fromRGB(200, 200, 209)
    TextLabel.TextSize = 14.000

    TextBox.Parent = Frame_3
    TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextBox.BackgroundTransparency = 1.000
    TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextBox.BorderSizePixel = 0
    TextBox.Position = UDim2.new(0.03125, 0, 0.186929911, 0)
    TextBox.Size = UDim2.new(0, 372, 0, 41)
    TextBox.Font = Enum.Font.Sarpanch
    TextBox.PlaceholderText = "[ Powered by PandaAuth ]"
    TextBox.Text = ""
    TextBox.TextColor3 = Color3.fromRGB(200, 200, 209)
    TextBox.TextSize = 15.000
    TextBox.TextXAlignment = Enum.TextXAlignment.Left

    GetKey.Name = "GetKey"
    GetKey.Parent = Frame
    GetKey.BackgroundColor3 = Color3.fromRGB(20, 20, 29)
    GetKey.BackgroundTransparency = 0.500
    GetKey.BorderColor3 = Color3.fromRGB(0, 0, 0)
    GetKey.BorderSizePixel = 0
    GetKey.Position = UDim2.new(0.0678733066, 0, 0.460317463, 0)
    GetKey.Size = UDim2.new(0, 170, 0, 45)
    GetKey.Font = Enum.Font.Ubuntu
    GetKey.Text = "Get Key"
    GetKey.TextColor3 = Color3.fromRGB(200, 200, 209)
    GetKey.TextSize = 14.000

    UICorner_2.CornerRadius = UDim.new(0, 6)
    UICorner_2.Parent = GetKey

    Login.Name = "Login"
    Login.Parent = Frame
    Login.BackgroundColor3 = Color3.fromRGB(20, 20, 29)
    Login.BackgroundTransparency = 0.500
    Login.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Login.BorderSizePixel = 0
    Login.Position = UDim2.new(0.552036226, 0, 0.460317463, 0)
    Login.Size = UDim2.new(0, 170, 0, 45)
    Login.Font = Enum.Font.Ubuntu
    Login.Text = "Log-in"
    Login.TextColor3 = Color3.fromRGB(200, 200, 209)
    Login.TextSize = 14.000

    UICorner_3.CornerRadius = UDim.new(0, 6)
    UICorner_3.Parent = Login

    Copyright.Name = "Copyright"
    Copyright.Parent = Frame
    Copyright.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Copyright.BackgroundTransparency = 1.000
    Copyright.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Copyright.BorderSizePixel = 0
    Copyright.Position = UDim2.new(0.0339366533, 0, 0.75, 0)
    Copyright.Size = UDim2.new(0, 414, 0, 50)
    Copyright.Font = Enum.Font.Code
    Copyright.Text = "In order to get acess to script you will need to buy or get a new key throught the KeySystem\n\nPowered By Panda Development - 2025 ©"
    Copyright.TextColor3 = Color3.fromRGB(150, 150, 159)
    Copyright.TextSize = 12.000
    Copyright.TextWrapped = true
    Copyright.TextXAlignment = Enum.TextXAlignment.Left
    Copyright.TextYAlignment = Enum.TextYAlignment.Top

    TextLabel_2.Parent = Frame
    TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel_2.BackgroundTransparency = 1.000
    TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_2.BorderSizePixel = 0
    TextLabel_2.Size = UDim2.new(0, 442, 0, 50)
    TextLabel_2.Font = Enum.Font.GothamMedium
    TextLabel_2.Text = "Cool Hub | Keysystem"
    TextLabel_2.TextColor3 = Color3.fromRGB(200, 200, 209)
    TextLabel_2.TextSize = 15.000

    CloseButton.Name = "CloseButton"
    CloseButton.Parent = Frame
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    CloseButton.BackgroundTransparency = 0.500
    CloseButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    CloseButton.BorderSizePixel = 0
    CloseButton.Position = UDim2.new(0.918552041, 0, 0.0396825415, 0)
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Font = Enum.Font.SourceSansBold
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.TextSize = 14.000

    UICorner_5.CornerRadius = UDim.new(0, 4)
    UICorner_5.Parent = CloseButton

    UICorner_4.CornerRadius = UDim.new(0, 4)
    UICorner_4.Parent = Frame

    -- Dragging functionality
    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    Frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = Frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    Frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)

    -- Button connections
    GetKey.MouseButton1Click:Connect(function()
        copyLink()
    end)

    Login.MouseButton1Click:Connect(function()
        if TextBox.Text then
            local Verify = verifyKey(TextBox.Text)
            if Verify then
                loadstring(game:HttpGet("https://pastebin.com/raw/DTrES0c6"))()
            else
                print("Key Is invalid")
            end
        end
    end)

    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)
end)
